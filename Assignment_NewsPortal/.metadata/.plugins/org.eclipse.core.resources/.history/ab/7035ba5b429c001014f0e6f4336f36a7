package com.newsportal.dao;

import com.newsportal.model.User;
import com.newsportal.util.DB;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class UserDAO {

    public User login(String email, String password) throws Exception {
        String sql = """
                SELECT Id, Password, Fullname, Birthday, Gender, Mobile, Email, Role
                FROM Users WHERE Email=? AND Password=?""";
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement(sql)) {
            ps.setString(1, email);
            ps.setString(2, password);
            try (ResultSet rs = ps.executeQuery()) {
                return rs.next() ? map(rs) : null;
            }
        }
    }

    public User findById(int id) throws Exception {
        String sql = "SELECT * FROM Users WHERE Id=?";
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement(sql)) {
            ps.setInt(1, id);
            try (ResultSet rs = ps.executeQuery()) {
                return rs.next() ? map(rs) : null;
            }
        }
    }

    public List<User> findAll() throws Exception {
        String sql = "SELECT * FROM Users ORDER BY Id DESC";
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {
            List<User> list = new ArrayList<>();
            while (rs.next()) list.add(map(rs));
            return list;
        }
    }

    public int insert(User u) throws Exception {
        String sql = """
                INSERT INTO Users(Password,Fullname,Birthday,Gender,Mobile,Email,Role)
                VALUES(?,?,?,?,?,?,?)""";
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            ps.setString(1, u.getPassword());
            ps.setString(2, u.getFullname());
            if (u.getBirthday() != null) ps.setDate(3, new java.sql.Date(u.getBirthday().getTime()));
            else ps.setNull(3, Types.DATE);
            if (u.getGender() != null) ps.setBoolean(4, u.getGender());
            else ps.setNull(4, Types.BIT);
            ps.setString(5, u.getMobile());
            ps.setString(6, u.getEmail());
            ps.setString(7, u.getRole());
            ps.executeUpdate();
            try (ResultSet keys = ps.getGeneratedKeys()) {
                return keys.next() ? keys.getInt(1) : 0;
            }
        }
    }

    public void update(User u) throws Exception {
        String sql = """
                UPDATE Users SET Password=?, Fullname=?, Birthday=?, Gender=?, Mobile=?, Email=?, Role=?
                WHERE Id=?""";
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement(sql)) {
            ps.setString(1, u.getPassword());
            ps.setString(2, u.getFullname());
            if (u.getBirthday() != null) ps.setDate(3, new java.sql.Date(u.getBirthday().getTime()));
            else ps.setNull(3, Types.DATE);
            if (u.getGender() != null) ps.setBoolean(4, u.getGender());
            else ps.setNull(4, Types.BIT);
            ps.setString(5, u.getMobile());
            ps.setString(6, u.getEmail());
            ps.setString(7, u.getRole());
            ps.setInt(8, u.getId());
            ps.executeUpdate();
        }
    }

    public void delete(int id) throws Exception {
        try (Connection cn = DB.getConnection();
             PreparedStatement ps = cn.prepareStatement("DELETE FROM Users WHERE Id=?")) {
            ps.setInt(1, id);
            ps.executeUpdate();
        }
    }

    /* ---------- helpers ---------- */
    private User map(ResultSet rs) throws Exception {
        User u = new User();
        u.setId(rs.getInt("Id"));
        u.setPassword(rs.getString("Password"));
        u.setFullname(rs.getString("Fullname"));
        Date bd = rs.getDate("Birthday");
        if (bd != null) u.setBirthday(new java.util.Date(bd.getTime()));
        Object g = rs.getObject("Gender");
        u.setGender(g == null ? null : rs.getBoolean("Gender"));
        u.setMobile(rs.getString("Mobile"));
        u.setEmail(rs.getString("Email"));
        u.setRole(rs.getString("Role"));
        return u;
    }
}
