package com.newsportal.controller;

import com.newsportal.dao.CategoryDAO;
import com.newsportal.dao.NewsDAO;
import com.newsportal.model.News;
import com.newsportal.model.User;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.time.LocalDateTime;
import java.util.List;

@WebServlet("/reporter/post-create")
@MultipartConfig(maxFileSize = 10 * 1024 * 1024) // 10MB
public class ReporterPostCreateServlet extends HttpServlet {

    private final CategoryDAO categoryDAO = new CategoryDAO();
    private final NewsDAO newsDAO = new NewsDAO();

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        // Chỉ cho reporter
        User u = (User) req.getSession().getAttribute("user");
        if (u == null || /* u.isRole() == true nghĩa là admin */ Boolean.TRUE.equals(u.isRole())) {
            resp.sendRedirect(req.getContextPath() + "/login");
            return;
        }
        try {
            req.setAttribute("categories", categoryDAO.findAll());
            req.getRequestDispatcher("/WEB-INF/views/reporter/post-create.jsp").forward(req, resp);
        } catch (Exception e) {
            throw new ServletException(e);
        }
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        req.setCharacterEncoding("UTF-8");

        User u = (User) req.getSession().getAttribute("user");
        if (u == null || Boolean.TRUE.equals(u.isRole())) {
            resp.sendRedirect(req.getContextPath() + "/login");
            return;
        }

        String title = req.getParameter("title");
        String content = req.getParameter("content");
        String author = u.getFullname();               // hoặc req.getParameter("author")
        int categoryId = Integer.parseInt(req.getParameter("categoryId"));
        boolean home = "on".equals(req.getParameter("home"));

        // Ảnh: ưu tiên file upload, nếu không có sẽ lấy URL từ text
        String imagePath = null;
        try {
            Part img = req.getPart("imageFile"); // name="imageFile"
            if (img != null && img.getSize() > 0) {
                String fileName = System.currentTimeMillis() + "_" + PathUtil.getFileName(img);
                // Lưu về /assets/uploads/
                String uploadDir = req.getServletContext().getRealPath("/assets/uploads");
                new File(uploadDir).mkdirs();
                File dest = new File(uploadDir, fileName);
                img.write(dest.getAbsolutePath());
                imagePath = req.getContextPath() + "/assets/uploads/" + fileName; // đường dẫn để <img src="">
            }
        } catch (Exception ignore) {}

        if (imagePath == null || imagePath.isBlank()) {
            imagePath = req.getParameter("imageUrl"); // cho phép nhập URL ảnh
        }

        try {
            News n = new News();
            n.setTitle(title);
            n.setContent(content);
            n.setImage(imagePath);
            n.setPostedDate(LocalDateTime.now());
            n.setAuthor(author);
            n.setCategoryId(categoryId);
            n.setHome(home);
            n.setReporterId(u.getId());     // gắn người đăng
            // ViewCount mặc định 0, Approved mặc định 0 trong INSERT

            int newId = newsDAO.insert(n);  // đã có trong NewsDAO của bạn
            // chuyển về dashboard hoặc trang preview
            resp.sendRedirect(req.getContextPath() + "/reporter/dashboard?msg=posted&id=" + newId);
        } catch (Exception e) {
            // hiển thị lại form + lỗi
            try { req.setAttribute("categories", categoryDAO.findAll()); } catch (Exception ignore) {}
            req.setAttribute("error", "Đăng bài thất bại: " + e.getMessage());
            req.getRequestDispatcher("/WEB-INF/views/reporter/post-create.jsp").forward(req, resp);
        }
    }

    /* ---- helpers ---- */
    static class PathUtil {
        static String getFileName(Part part) {
            String cd = part.getHeader("content-disposition");
            if (cd == null) return "upload.bin";
            for (String s : cd.split(";")) {
                s = s.trim();
                if (s.startsWith("filename")) {
                    String fn = s.substring(s.indexOf('=') + 1).trim().replace("\"", "");
                    // loại bỏ đường dẫn kèm theo (Edge/IE)
                    int i = Math.max(fn.lastIndexOf('/'), fn.lastIndexOf('\\'));
                    return i >= 0 ? fn.substring(i + 1) : fn;
                }
            }
            return "upload.bin";
        }
    }
}
